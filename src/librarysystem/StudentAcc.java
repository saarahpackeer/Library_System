/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarysystem;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saarah Packeer
 */
public class StudentAcc extends javax.swing.JFrame {

    /**
     * Creates new form StudentAcc
     */
    
    String isbn;
    Librarian l = new Librarian("jack", "Jack Will", "pass", "Librarian");
    Admin a = new Admin("Jack Williams", "Jack", "Librarian");


    List<Student> studentdatabase = new ArrayList<Student>();
    List<Book> bookcollection;
    List<Book> bookdatabase = new ArrayList<Book>();
    String luser;


    
    public StudentAcc() {
    }
    

    public StudentAcc(String loggedon) {

        initComponents();
        this.luser = loggedon;
        loggedonuser.setText(luser);
        l.loadBooks(bookdatabase);
        a.loadStudents(studentdatabase);

        System.out.println();
        System.out.println("Current books in the database.\n");
        for(Book book :bookdatabase){
            System.out.println(book.getTitle());
        }



    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        entered = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        findBook = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        findlocationb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        reserveisbn = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        reserveB = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        loggedonuser = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Search by ISBN/Title/Keywords:");

        jButton1.setText("Search");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Title", "Author", "Edition", "Publication Date", "Keywords", "Location", "Status"
            }
        ));
        jScrollPane4.setViewportView(table1);

        jButton3.setText("View all books");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(entered)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(entered, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Search for a book", jPanel1);

        jLabel3.setText("Enter the ISBN:");

        findlocationb.setText("Search");
        findlocationb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                findlocationbMouseClicked(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book", "Location"
            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(findBook, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(findlocationb, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(findlocationb))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Find book location", jPanel2);

        jLabel4.setText("Enter the ISBN:");

        reserveB.setText("Reserve");
        reserveB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reserveBMouseClicked(evt);
            }
        });

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Title", "Author", "Edition", "Publication Date", "Keywords", "Location", "Status"
            }
        ));
        jScrollPane5.setViewportView(table2);

        jButton2.setText("Search for book");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(reserveisbn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reserveB, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(reserveisbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(reserveB))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reserve a book", jPanel3);

        loggedonuser.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        loggedonuser.setText("user");
        loggedonuser.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButton4.setText("logout");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loggedonuser, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loggedonuser, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
       DefaultTableModel dm = (DefaultTableModel)table1.getModel();
        while(dm.getRowCount()>0) {
            for(int i=0; i<dm.getRowCount(); i++) {
            dm.removeRow(i);
        }
        } 
        
        
       List<Book> keywordsearch = new ArrayList<Book>(); 

       Book found = null;
       try {
       String enteredisbn = entered.getText();
        
        for (Book bookk : bookdatabase) {
            if (enteredisbn.equals(bookk.getISBN()) || enteredisbn.equals(bookk.getTitle()) || bookk.getTerms().contains(enteredisbn)) {
                found = bookk;
                keywordsearch.add(bookk);
            } 
        }

        for(int i=0; i<keywordsearch.size(); i++) {
            String[] data = {keywordsearch.get(i).getISBN(),keywordsearch.get(i).getTitle(),keywordsearch.get(i).getAuthor(),keywordsearch.get(i).getEdition(),keywordsearch.get(i).getPubdate(),keywordsearch.get(i).getTerms(),keywordsearch.get(i).getLocation(),keywordsearch.get(i).getStatus()};
            dm.addRow(data);
        }      
        } catch (Exception e){
            System.out.println("error: "+e);
        }
       
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void findlocationbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findlocationbMouseClicked
        // TODO add your handling code here:
        
        if(findBook.getText().equals("")){
            JOptionPane.showMessageDialog(new JFrame(), "The field cannot be empty.");
        } else {
            l.loadBooks(bookdatabase);  
            Book found = null;
            try {
            String entered = findBook.getText();
            for (Book bookk : bookdatabase) {
            if (entered.equals(bookk.getISBN())) {
               found = bookk;
            } 
            }
            bookdatabase.clear();
            l.loadBooks(bookdatabase); 
            DefaultTableModel dm = (DefaultTableModel)table.getModel();
            String[] data = {found.getTitle(),found.getLocation()};
            dm.addRow(data);
            } catch (Exception e){
                System.out.println("error: "+e);
            }
        }
        
        
       
       
    }//GEN-LAST:event_findlocationbMouseClicked

    private void reserveBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reserveBMouseClicked

        String enteredISBN = reserveisbn.getText();

        // if invalid input
        if(enteredISBN.equals("")) {
            JOptionPane.showMessageDialog(new JFrame(), "The field cannot be empty.");
        }


        // valid
        else {
            // clear table and load books
            DefaultTableModel dm = (DefaultTableModel)table2.getModel();
            while(dm.getRowCount()>0) {
                for(int i=0; i<dm.getRowCount(); i++) {
                dm.removeRow(i);
                }
            }
            l.loadBooks(bookdatabase);


        try {

            
            bookdatabase = l.reserveBook(enteredISBN, bookdatabase, luser);
            l.writeFile(bookdatabase);
            l.loadBooks(bookdatabase); 
        } catch (IOException ex) {
            Logger.getLogger(LibrarianAcc.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(Book b: bookdatabase) {
        String[] data = {b.getISBN(),b.getTitle(),b.getAuthor(),b.getEdition(),b.getPubdate(),b.getTerms(),b.getLocation(),b.getStatus()};
        dm.addRow(data);
        }        
        

        }
        
        
        
        
    }//GEN-LAST:event_reserveBMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
       
        DefaultTableModel dm = (DefaultTableModel)table2.getModel();
        while(dm.getRowCount()>0) {
            for(int i=0; i<dm.getRowCount(); i++) {
            dm.removeRow(i);
        }
        }         
        
       List<Book> keywordsearch = new ArrayList<Book>(); 
       l.loadBooks(bookdatabase);  
       Book found = null;
       try {
       String enteredisbn = reserveisbn.getText();
        
        for (Book bookk : bookdatabase) {
            if (enteredisbn.equals(bookk.getISBN()) || enteredisbn.equals(bookk.getTitle()) || bookk.getTerms().contains(enteredisbn)) {
                found = bookk;
                keywordsearch.add(bookk);
            } 
        }
        
        for(int i=0; i<keywordsearch.size(); i++) {
            String[] data = {keywordsearch.get(i).getISBN(),keywordsearch.get(i).getTitle(),keywordsearch.get(i).getAuthor(),keywordsearch.get(i).getEdition(),keywordsearch.get(i).getPubdate(),keywordsearch.get(i).getTerms(),keywordsearch.get(i).getLocation(),keywordsearch.get(i).getStatus()};
            dm.addRow(data);
        }      
        } catch (Exception e){
            System.out.println("error: "+e);
        }
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel dm = (DefaultTableModel)table1.getModel();
        while(dm.getRowCount()>0) {
            for(int i=0; i<dm.getRowCount(); i++) {
            dm.removeRow(i);
        }
        }
        
        
        bookdatabase.clear();
        l.loadBooks(bookdatabase);  
        
        try {

        
        for(Book b : bookdatabase) {
            String[] data = {b.getISBN(),b.getTitle(),b.getAuthor(),b.getEdition(),b.getPubdate(),b.getTerms(),b.getLocation(),b.getStatus()};
            dm.addRow(data);
        }      
        } catch (Exception e){
            System.out.println("error: "+e);
        }
        
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        
        dispose();
        
    }//GEN-LAST:event_jButton4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentAcc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentAcc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentAcc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentAcc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAcc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField entered;
    private javax.swing.JTextField findBook;
    private javax.swing.JButton findlocationb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel loggedonuser;
    private javax.swing.JButton reserveB;
    private javax.swing.JTextField reserveisbn;
    private javax.swing.JTable table;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
